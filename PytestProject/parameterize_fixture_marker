import pytest

@pytest.fixture(params=[(3,4), [3,5]], ids=['tuple', 'list'])
def fixture01(request):
    return request.param

def test_fix_param01(fixture01):
    assert (type(fixture01)) in [tuple, list]
******************************************************************
import pytest

@pytest.fixture(params=[(3,4), [3,5]], ids=['tuple', 'list'])
def fixture01(request):
    return request.param

@pytest.fixture(params=['access'])
def fixture02(request):
    return request.param

def test_fix_param01(fixture01):
    assert (type(fixture01)) in [tuple, list]

def test_fix_param02(fixture01, fixture02):
    if (fixture02 == "access"):
        assert (fixture01[0])
***********************************************************************
import pytest

@pytest.fixture(params=[(3,4), [3,5]], ids=['tuple', 'list'])
def fixture01(request):
    return request.param

@pytest.fixture(params=["access", "slice", "assign", "len"])
def fixture02(request):
    return request.param

def test_fix_param01(fixture01):
    assert (type(fixture01)) in [tuple, list]

def test_fix_param02(fixture01, fixture02):
    if (fixture02 == "access"):
        assert (fixture01[0])
    elif (fixture02 == 'slice'):
        assert fixture01[::-1]
    elif (fixture02 == 'assign'):
        fixture01[0] = 99
        assert True
    elif (fixture02 == 'len'):
        assert len(fixture01)

  *************************************************************
  import pytest

@pytest.fixture(params=[(3,4), [3,5]], ids=['tuple', 'list'])
def fixture01(request):
    return request.param

@pytest.fixture(params=["access", "slice", "assign", "len"])
def fixture02(request):
    return request.param

def test_fix_param01(fixture01):
    assert (type(fixture01)) in [tuple, list]

def test_fix_param02(fixture01, fixture02):
    if (fixture02 == "access"):
        assert (fixture01[0])
    elif (fixture02 == 'slice'):
        assert fixture01[::-1]
    elif (fixture02 == 'assign'):
        fixture01[0] = 99
        assert True
    elif (fixture02 == 'len'):
        assert len(fixture01)
  *******************************************
  import pytest
@pytest.fixture()
def setup_list():
    print("\n In Fixtures ... \n")
    city = ['New York', 'London', 'Riyadh', 'Signgapore', 'Mumbai']
    return city


def test_getItem(setup_list):
    print(setup_list[1:3])
    assert setup_list[0] == 'New York'
    assert setup_list[::2] == ['New York', 'Riyadh', 'Mumbai']

def myReverse(lst):
    lst.reverse()
    return lst

def test_reverseList(setup_list):
    assert setup_list[::-2] == ['Mumbai', 'Riyadh', 'New York']
    assert setup_list[::-1] == myReverse(setup_list)

@pytest.mark.xfail(reason="known issue: usefixtures cannot use fixtures return value")
@pytest.mark.usefixtures("setup_list")
def test_usefixturedemo():
    assert  1 == 1
    assert (setup_list[0])

*******************************************************************
import pytest
import os

weekdays1 = ['mon', 'tue', 'wed']
weekdays2 = ['fri', 'sat', 'sun']
filename = "file1.txt"
@pytest.fixture()
def setup01():
    wk1 = weekdays1.copy()
    wk1.append('thur')
    yield wk1
    print("\n After yield in setup01 fixture")
    # wk1.clear()
    wk1.pop()

@pytest.fixture()
def setup02():
    wk2 = weekdays2.copy()
    wk2.insert(0, 'thur')
    yield wk2
    os.remove(filename)

@pytest.fixture()
def setup03():
    f = open(filename, 'w')
    f.write("Pytest is good")
    f.close()
    f = open(filename, 'r+')
    f = open(filename, 'r+')
    f.close()
    yield f

def test_extend(setup01):
    setup01.extend(weekdays2)
    assert setup01 == ['mon', 'tue', 'wed', 'thur', 'fri', 'sat', 'sun']

def test_len(setup01, setup02):
    assert len(weekdays1 + setup02) == len(setup01 + weekdays2)

def test_filetest(setup03):
    assert (setup03.readline()) == 'Pytest is good'
**********************************************************************
import pytest
@pytest.mark.parametrize('test_input', [82,78,45,90])
def test_param01(test_input):
    assert test_input > 50
(.venv) PS C:\Users\vwank\PycharmProjects\PythonProject4\pytest_topics> pytest -v .\pytest_parameterize.py
=============================================================== test session starts ===============================================================
platform win32 -- Python 3.13.1, pytest-8.3.5, pluggy-1.5.0 -- C:\Trainings\RobotFramework\RobotFramework\.venv\Scripts\python.exe
cachedir: .pytest_cache
rootdir: C:\Users\vwank\PycharmProjects\PythonProject4
configfile: pytest.ini
collected 4 items                                                                                                                                  

pytest_parameterize.py::test_param01[82] PASSED                                                                                              [ 25%]
pytest_parameterize.py::test_param01[78] PASSED                                                                                              [ 50%] 
pytest_parameterize.py::test_param01[45] FAILED                                                                                              [ 75%]
pytest_parameterize.py::test_param01[90] PASSED                                                                                              [100%] 

==================================================================== FAILURES ===================================================================== 
________________________________________________________________ test_param01[45] _________________________________________________________________ 

test_input = 45

    @pytest.mark.parametrize('test_input', [82,78,45,90])
    def test_param01(test_input):
>       assert test_input > 50
E       assert 45 > 50

pytest_parameterize.py:4: AssertionError
============================================================= short test summary info =============================================================
FAILED pytest_parameterize.py::test_param01[45] - assert 45 > 50
=========================================================== 1 failed, 3 passed in 0.18s =========================================================== 
(.venv) PS C:\Users\vwank\PycharmProjects\PythonProject4\pytest_topics> 

